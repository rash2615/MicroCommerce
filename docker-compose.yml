version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres-microcommerce
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-multiple-db.sql:/docker-entrypoint-initdb.d/init-multiple-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    command: [
      "postgres",
      "-c", "log_statement=all"
    ]

  customer-service:
    image: openjdk:17-jdk-slim
    container_name: customer-service
    depends_on:
      postgres:
        condition: service_healthy
    working_dir: /app
    volumes:
      - ./customer-service/target:/app
    command: ["java", "-jar", "customer-service-0.0.1-SNAPSHOT.jar"]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/customerdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: your_password
    ports:
      - "8081:8081"

  product-service:
    image: openjdk:17-jdk-slim
    container_name: product-service
    depends_on:
      postgres:
        condition: service_healthy
    working_dir: /app
    volumes:
      - ./product-service/target:/app
    command: ["java", "-jar", "product-service-0.0.1-SNAPSHOT.jar"]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/productdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: your_password
    ports:
      - "8082:8082"

  order-service:
    image: openjdk:17-jdk-slim
    container_name: order-service
    depends_on:
      postgres:
        condition: service_healthy
    working_dir: /app
    volumes:
      - ./order-service/target:/app
    command: ["java", "-jar", "order-service-0.0.1-SNAPSHOT.jar"]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/orderdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: your_password
    ports:
      - "8083:8083"

  gateway:
    image: openjdk:17-jdk-slim
    container_name: gateway
    depends_on:
      - customer-service
      - product-service
      - order-service
    working_dir: /app
    volumes:
      - ./gateway/target:/app
    command: ["java", "-jar", "gateway-0.0.1-SNAPSHOT.jar"]
    environment:
      SPRING_PROFILES_ACTIVE: default
    ports:
      - "8080:8080"

volumes:
  pgdata: 